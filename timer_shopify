{{ 'countdown.css' | asset_url | stylesheet_tag }}
//css style
.countdown-timer__container {
    max-width: 1200px;
    padding: 0 18px;
    margin: 0 auto;
}
.container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    justify-content: space-between;
    align-items: center;
    align-self: center;
}
.countdown__title {
}
.countdown__timer-title{
    display: flex;
    flex-direction: column;
}
.timer {
    border: 2px solid pink;
    border-radius: 10px;
    margin: 10px 0;
    text-align: center;
}
.countdown__num {
    display: inline-block;
    font-size: 1em;
    padding: 0.5em;
    text-transform: uppercase;
    font-weight: bold;

}
.countdown__text {
    margin-right: 5px;
}
ul{
    padding: 0;
}
.link__button{
    margin-top: -20px;
    text-transform: uppercase;
    max-width: auto;
    
} 
a{
    text-decoration: none;
    color: rgb(61, 61, 61);
}
.link__button:hover{
    
    color: white;

}
@media (max-width: 750px) {
    .container{
        display: grid;
        grid-template-columns: 1fr;
    }
    .timer{
        margin: 0;
    }
    .countdown__num {
        display: grid;
        grid-template-columns: 1fr;
        font-size: 1em;
    }
    .countdown__ul{
       display: inline-flex;

    }
    .countdown__timer-title{
        text-align: center;
    }
    .link__button{
        margin: 0 auto;
        margin-top: -20px;
    }
}
//end css style
{% if section.settings.enable_countdown %}
<div class="countdown-timer__container color-{{ section.settings.color_scheme }} gradient{% if section.settings.show_line_separator %} header-wrapper--border-bottom{% endif %}">
    <div class="container">
    <div class="countdown__timer-title">
        <h2 id="headline" class="countdown__title">–î–æ –∫–æ–Ω—Ü–∞ –∞–∫—Ü–∏–∏ –æ—Å—Ç–∞–ª–æ—Å—å:</h2>
        <a href="{{ section.settings.button_url }}" class="countdown__title link__button">{{ section.settings.button_label }}</a>
    </div>
  <div id="countdown" class="timer">
    <ul class="countdown__ul">
      <li class="countdown__num"><span class="countdown__text" id="days"></span>–î–Ω–µ–π</li>
      <li class="countdown__num"><span class="countdown__text" id="hours"></span>–ß–∞—Å–æ–≤</li>
      <li class="countdown__num"><span class="countdown__text" id="minutes"></span>–ú–∏–Ω—É—Ç</li>
      <li class="countdown__num"><span class="countdown__text" id="seconds"></span>–°–µ–∫—É–Ω–¥</li>
    </ul>
  </div>
</div>
</div>
{% endif %}


<script>
    const deadline = '{{ section.settings.timer_date }}';

function getTimeRemaining(endtime) {
    let days, hours, minutes, seconds;
    const t = Date.parse(endtime) - Date.parse(new Date());

    if (t <= 0) {
        days = 0;
        hours = 0;
        minutes = 0;
        seconds = 0;
    }else{
        days = Math.floor( (t/(1000*60*60*24)) ),
        seconds = Math.floor( (t/1000) % 60 ),
        minutes = Math.floor( (t/1000/60) % 60 ),
        hours = Math.floor( (t/(1000*60*60) % 24) );
    }


    return {
        'total': t,
        'days': days,
        'hours': hours,
        'minutes': minutes,
        'seconds': seconds
    };
}

function getZero(num){
    if (num >= 0 && num < 10) { 
        return '0' + num;
    } else {
        return num;
    }
}

function setClock(selector, endtime) {

    const timer = document.querySelector(selector),
        days = timer.querySelector("#days"),
        hours = timer.querySelector('#hours'),
        minutes = timer.querySelector('#minutes'),
        seconds = timer.querySelector('#seconds'),
        timeInterval = setInterval(updateClock, 1000);

    updateClock();

    function updateClock() {
        const t = getTimeRemaining(endtime);

        days.innerHTML = getZero(t.days);
        hours.innerHTML = getZero(t.hours);
        minutes.innerHTML = getZero(t.minutes);
        seconds.innerHTML = getZero(t.seconds);

        if (t.total <= 0) {
            clearInterval(timeInterval);
        }
    }
}

setClock('.timer', deadline);
</script>

{% schema %}
    {
        "name": "Countdown Bar",
        "settings": [
            {
                "type": "checkbox",
                "id": "enable_countdown",
                "default": false,
                "label": "Countdown Bar"
            },
            {
                "type": "select",
                "id": "color_scheme",
                "options": [
                    {
                    "value": "accent-1",
                    "label": "t:sections.all.colors.accent_1.label"
                    },
                    {
                    "value": "accent-2",
                    "label": "t:sections.all.colors.accent_2.label"
                    },
                    {
                    "value": "background-1",
                    "label": "t:sections.all.colors.background_1.label"
                    },
                    {
                    "value": "background-2",
                    "label": "t:sections.all.colors.background_2.label"
                    },
                    {
                    "value": "inverse",
                    "label": "t:sections.all.colors.inverse.label"
                    }
                ],
                "default": "background-1",
                "label": "t:sections.all.colors.label"
            },
            {
                "type": "text",
                "id": "button_label",
                "label": "Button label",
                "default": "üéÄ –ü–†–ò–ù–Ø–¢–¨ –£–ß–ê–°–¢–ò–ï –í –ê–ö–¶–ò–ò"
            },
            {
                "type": "url",
                "id": "button_url",
                "label": "Button link"
            },
            {
                "type": "text",
                "id": "timer_date",
                "label": "Timer Date",
                "default": "2023-06-12",
                "info": "–ü–æ–¥—Å—Ç–∞–≤—å—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ 2023-06-12"
            }
        ],
        "presets": [
            {
                "name": "Countdown Bar"
            }
        ]
    }
{% endschema %}

